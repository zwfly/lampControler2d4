C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_2D4
OBJECT MODULE PLACED IN .\Out\Objects\app_2d4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_2d4.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_2d4.lst) OBJEC
                    -T(.\Out\Objects\app_2d4.obj)

line level    source

   1          /*
   2           * app_2d4.c
   3           *
   4           *  Created on: 2017Äê8ÔÂ16ÈÕ
   5           *      Author: fly
   6           */
   7          #include "app.h"
   8          #include <string.h>
   9          #include <ctype.h>
  10          
  11          #include "app_2d4.h"
  12          
  13          static uint8_t sendRcv_flag = 0; //0 rcv£¬ 1 send
  14          static uint8_t rcvBuf[PAYLOAD_WIDTH] = { 0 };
  15          uint8_t sendBuf[PAYLOAD_WIDTH] = { 0 };
  16          
  17          uint8_t tmpBuf[8] = { 0 };
  18          
  19          //static uint8_t test_vol = 0;
  20          //static uint8_t test_yinxiang_status = 0;
  21          
  22          void app_2d4_init(void) {
  23   1      
  24   1              sendRcv_flag = 0;
  25   1              memset(rcvBuf, 0, sizeof(rcvBuf));
  26   1              memset(sendBuf, 0, sizeof(sendBuf));
  27   1      
  28   1              RF_Init();
  29   1      #if 1
  30   1      
  31   1              RF_RxMode();
  32   1      #else
                      RF_TxMode();
                      sendRcv_flag = 1;
              #endif
  36   1      
  37   1      //      RF_Carrier(1);
  38   1      
  39   1      }
  40          
  41          void app_2d4_send(uint8_t *d, uint8_t len) {
  42   1      //      if (len > PAYLOAD_WIDTH) {
  43   1      //              return;
  44   1      //      }
  45   1              uint8_t i = 0;
  46   1              for (i = 0; i < 120; i++) {
  47   2                      nop
  48   2                      nop
  49   2                      nop
  50   2                      nop
  51   2              }
  52   1              RF_TxMode();
  53   1              sendRcv_flag = 1;
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 2   

  54   1      
  55   1              for (i = 0; i < 120; i++) {
  56   2                      nop
  57   2                      nop
  58   2                      nop
  59   2                      nop
  60   2              }
  61   1      
  62   1              if (sendBuf != d) {
  63   2                      memset(sendBuf, 0, PAYLOAD_WIDTH);
  64   2                      memcpy(sendBuf, d, len);
  65   2              }
  66   1      
  67   1      }
  68          #if DEBUG
              idata char sss[32] = {0};
              #endif
  71          static void app_2d4_Rcv(uint8_t *buf) {
  72   1              uint8_t tmp = 0;
  73   1              uint8_t i = 0;
  74   1              uint8_t index = 0;
  75   1              uint8_t check = 0;
  76   1      #if DEBUG
                      sprintf(sss, "rcv %02X %02X %02X %02X %02X %02X\r\n", (uint16_t) buf[0],
                                      (uint16_t) buf[1], (uint16_t) buf[2], (uint16_t) buf[3],
                                      (uint16_t) buf[4], (uint16_t) buf[5]);
                      printf(sss);
              #endif
  82   1              if (buf[0] != LCD2LAMP_HEADER) {
  83   2                      return;
  84   2              }
  85   1              if (buf[1] > sizeof(rcvBuf)) {
  86   2                      return;
  87   2              }
  88   1              for (i = 0; i < (buf[1] + 1); i++) {
  89   2                      check += buf[i + 1];
  90   2              }
  91   1              if (check != buf[buf[1] + 2]) {
  92   2                      return;
  93   2              }
  94   1      
  95   1              memset(sendBuf, 0, PAYLOAD_WIDTH);
  96   1              index = 0;
  97   1              switch (buf[2]) {
  98   2              case POWER_SHORT_CMD:
  99   2      
 100   2                      if (g_tWork.status.bits.DOME) {
 101   3                              g_tWork.status.bits.DOME = 0;
 102   3      
 103   3                              sendBuf[index++] = LAMP2LCD_HEADER;
 104   3                              sendBuf[index++] = 11;
 105   3                              sendBuf[index++] = DOME_CMD;
 106   3                              sendBuf[index++] = g_tWork.status.bits.DOME;
 107   3                              sendBuf[index++] = g_tWork.status.bits.pause;
 108   3                              app_dome_get_current_Name(sendBuf + index, 8);
 109   3                              index += 8;
 110   3                              for (i = 0; i < (sendBuf[1] + 1); i++) {
 111   4                                      sendBuf[index] += sendBuf[i + 1];
 112   4                              }
 113   3                              index++;
 114   3                              app_2d4_send(sendBuf, index);
 115   3                      }
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 3   

 116   2      
 117   2      #if DEBUG
                              printf("POWER_SHORT_CMD\r\n");
              #endif
 120   2                      break;
 121   2              case POWER_LONG_CMD:
 122   2      #if 0
                              if (buf[3] == 1) {
                                      test_yinxiang_status = 1;
                              } else if (buf[3] == 2) {
                                      test_yinxiang_status = 0;
                              } else if (buf[3] == 3) {
                                      if (test_yinxiang_status) {
                                              test_yinxiang_status = 0;
                                      } else {
                                              test_yinxiang_status = 1;
                                      }
                              }
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_yinxiang_status;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 142   2                      tmp = 0x03;
 143   2                      app_uart_send(POWER_LONG_UART_CMD, &tmp, 1);
 144   2      
 145   2      #endif
 146   2      
 147   2      #if DEBUG
                              printf("POWER_LONG_CMD\r\n");
              #endif
 150   2                      break;
 151   2              case ACC_CMD:
 152   2      
 153   2                      if (buf[3] == 1) {
 154   3                              Relay_on();
 155   3                      } else if (buf[3] == 2) {
 156   3                              Relay_off();
 157   3                      } else if (buf[3] == 3) {
 158   3                              Relay_toggle();
 159   3                      }
 160   2      
 161   2                      sendBuf[index++] = LAMP2LCD_HEADER;
 162   2                      sendBuf[index++] = 0x02;
 163   2                      sendBuf[index++] = buf[2];
 164   2                      if (Relay_IsOn()) {
 165   3                              sendBuf[index++] = 0x01;
 166   3                      } else {
 167   3                              sendBuf[index++] = 0x02;
 168   3                      }
 169   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 170   3                              sendBuf[index] += sendBuf[i + 1];
 171   3                      }
 172   2      
 173   2      #if DEBUG
                              printf("ACC_CMD\r\n");
              #endif
 176   2                      break;
 177   2              case UP_CMD:
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 4   

 178   2                      if (g_tWork.status.bits.DOME) {
 179   3      
 180   3                              if (g_tWork.status.bits.pause == 0) {
 181   4      
 182   4                                      app_dome_previous();
 183   4                                      sendBuf[index++] = LAMP2LCD_HEADER;
 184   4                                      sendBuf[index++] = 10;
 185   4                                      sendBuf[index++] = UP_CMD;
 186   4                                      sendBuf[index++] = 0x05;
 187   4                                      app_dome_get_current_Name(sendBuf + index, 8);
 188   4                                      index += 8;
 189   4                                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 190   5                                              sendBuf[index] += sendBuf[i + 1];
 191   5                                      }
 192   4                                      index++;
 193   4                                      app_2d4_send(sendBuf, index);
 194   4                              }
 195   3                      } else {
 196   3                              app_uart_send(UP_UART_CMD, 0, 0);
 197   3                      }
 198   2      
 199   2      #if DEBUG
                              printf("UP_CMD\r\n");
              #endif
 202   2                      break;
 203   2              case DOWN_CMD:
 204   2                      if (g_tWork.status.bits.DOME) {
 205   3                              if (g_tWork.status.bits.pause == 0) {
 206   4                                      app_dome_next();
 207   4                                      sendBuf[index++] = LAMP2LCD_HEADER;
 208   4                                      sendBuf[index++] = 10;
 209   4                                      sendBuf[index++] = UP_CMD;
 210   4                                      sendBuf[index++] = 0x05;
 211   4                                      app_dome_get_current_Name(sendBuf + index, 8);
 212   4                                      index += 8;
 213   4                                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 214   5                                              sendBuf[index] += sendBuf[i + 1];
 215   5                                      }
 216   4                                      index++;
 217   4                                      app_2d4_send(sendBuf, index);
 218   4                              }
 219   3                      } else {
 220   3                              app_uart_send(DOWN_UART_CMD, 0, 0);
 221   3                      }
 222   2      
 223   2      #if DEBUG
                              printf("DOWN_CMD\r\n");
              #endif
 226   2                      break;
 227   2              case DOME_CMD:
 228   2      
 229   2      //              tmp = 0x03;
 230   2      //              app_uart_send(DOME_UART_CMD, &tmp, 1);
 231   2      
 232   2                      if (g_tWork.status.bits.DOME) {
 233   3                              g_tWork.status.bits.DOME = 0;
 234   3      
 235   3                      } else {
 236   3                              g_tWork.status.bits.DOME = 1;
 237   3                      }
 238   2                      sendBuf[index++] = LAMP2LCD_HEADER;
 239   2                      sendBuf[index++] = 11;
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 5   

 240   2                      sendBuf[index++] = DOME_CMD;
 241   2                      sendBuf[index++] = g_tWork.status.bits.DOME;
 242   2                      sendBuf[index++] = g_tWork.status.bits.pause;
 243   2                      app_dome_get_current_Name(sendBuf + index, 8);
 244   2                      index += 8;
 245   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 246   3                              sendBuf[index] += sendBuf[i + 1];
 247   3                      }
 248   2                      index++;
 249   2                      app_2d4_send(sendBuf, index);
 250   2      
 251   2                      break;
 252   2              case VOL_ADD_CMD:
 253   2      #if 0
                              if (buf[3] == 1) {
                                      test_vol++;
                                      if (test_vol > 30) {
                                              test_vol = 30;
                                      }
                              } else if (buf[3] == 2) {
                                      if (test_vol) {
                                              test_vol--;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_vol;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              
              #else
 274   2      
 275   2                      app_uart_send(VOL_ADD_UART_CMD, 0, 0);
 276   2      
 277   2      #endif
 278   2      
 279   2      #if DEBUG
                              printf("VOL_ADD_CMD\r\n");
              #endif
 282   2                      break;
 283   2              case VOL_MINUS_CMD:
 284   2      #if 0
                              if (buf[3] == 1) {
                                      test_vol++;
                                      if (test_vol > 30) {
                                              test_vol = 30;
                                      }
                              } else if (buf[3] == 2) {
                                      if (test_vol) {
                                              test_vol--;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_vol;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 6   

                              }
              #else
 304   2                      app_uart_send(VOL_MINUS_UART_CMD, 0, 0);
 305   2      #endif
 306   2      
 307   2      #if DEBUG
                              printf("VOL_MINUS_CMD\r\n");
              #endif
 310   2                      break;
 311   2              case PLAY_CMD:
 312   2      #if 0
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x03;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = (uint8_t) g_tWork.mode;
              
                              if (buf[3] == 3) {
              
                                      switch (g_tWork.mode) {
                                              case 'B':
              
                                              if (g_tWork.status.bits.BT) {
                                                      g_tWork.status.bits.BT = 0;
                                              } else {
                                                      g_tWork.status.bits.BT = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.BT;
                                              break;
                                              case 'F':
                                              if (g_tWork.status.bits.FM) {
                                                      g_tWork.status.bits.FM = 0;
                                              } else {
                                                      g_tWork.status.bits.FM = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.FM;
                                              break;
                                              case 'A':
                                              if (g_tWork.status.bits.AUX) {
                                                      g_tWork.status.bits.AUX = 0;
                                              } else {
                                                      g_tWork.status.bits.AUX = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.AUX;
                                              break;
                                              case 'U':
                                              if (g_tWork.status.bits.USB) {
                                                      g_tWork.status.bits.USB = 0;
                                              } else {
                                                      g_tWork.status.bits.USB = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.USB;
                                              break;
                                      }
              
                              }
              
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 362   2                      if (g_tWork.status.bits.DOME) {
 363   3                              if (g_tWork.status.bits.pause) {
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 7   

 364   4                                      g_tWork.status.bits.pause = 0;
 365   4                                      app_dome_start_current();
 366   4                              } else {
 367   4                                      g_tWork.status.bits.pause = 1;
 368   4                                      app_dome_stop_current();
 369   4                              }
 370   3      
 371   3                              sendBuf[index++] = LAMP2LCD_HEADER;
 372   3                              sendBuf[index++] = 11;
 373   3                              sendBuf[index++] = PLAY_CMD;
 374   3                              sendBuf[index++] = 0x05;
 375   3                              sendBuf[index++] = g_tWork.status.bits.pause;
 376   3                              app_dome_get_current_Name(sendBuf + index, 8);
 377   3                              index += 8;
 378   3                              for (i = 0; i < (sendBuf[1] + 1); i++) {
 379   4                                      sendBuf[index] += sendBuf[i + 1];
 380   4                              }
 381   3                              index++;
 382   3                              app_2d4_send(sendBuf, index);
 383   3      
 384   3                      } else {
 385   3                              app_uart_send(PLAY_UART_CMD, 0, 0);
 386   3                      }
 387   2      
 388   2      #endif
 389   2      #if DEBUG
                              printf("PLAY_CMD\r\n");
              #endif
 392   2                      break;
 393   2              case MODE_CMD:
 394   2      #if 0
                              if (buf[3] == 1) {
                                      switch (g_tWork.mode) {
                                              case 'B':
                                              g_tWork.mode = 'F';
                                              break;
                                              case 'F':
                                              g_tWork.mode = 'A';
                                              break;
                                              case 'A':
                                              g_tWork.mode = 'U';
                                              break;
                                              case 'U':
                                              g_tWork.mode = 'B';
                                              break;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = g_tWork.mode;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 420   2                      app_uart_send(MODE_UART_CMD, 0, 0);
 421   2      #endif
 422   2      
 423   2      #if DEBUG
                              printf("MODE_CMD\r\n");
              #endif
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 8   

 426   2                      break;
 427   2              }
 428   1              if (index) {
 429   2                      index++;
 430   2      #if 0
                              nop
                              nop
                              nop
                              nop
              
                              RF_TxMode();
                              sendRcv_flag = 1;
                              for (i = 0; i < 120; i++) {
                                      nop
                                      nop
                                      nop
                                      nop
                              }
              #else
 445   2                      app_2d4_send(sendBuf, index);
 446   2      #endif
 447   2              }
 448   1      
 449   1      }
 450          
 451          void app_2d4_pro(void) {
 452   1      
 453   1              if (sendRcv_flag) {
 454   2      
 455   2                      switch (ucRF_GetStatus()) {
 456   3                      case TX_DS_FLAG:                // ÆÕÍ¨ÐÍ·¢ËÍÍê³É »ò ÔöÇ¿ÐÍ·¢ËÍ³É¹¦
 457   3      
 458   3                              RF_ClearFIFO();
 459   3                              RF_ClearStatus();
 460   3      
 461   3      //                      printf("Send OK\r\n");
 462   3      
 463   3                              sendRcv_flag = 0;
 464   3                              RF_RxMode();
 465   3      
 466   3      //                      Relay_toggle();
 467   3      
 468   3                              break;
 469   3                      case RX_DR_FLAG:                //·¢ËÍ³É¹¦ÇÒÊÕµ½payload
 470   3      
 471   3                              RF_ClearFIFO();
 472   3                              RF_ClearStatus();
 473   3                              break;
 474   3                      case MAX_RT_FLAG:               // ÔöÇ¿ÐÍ·¢ËÍ³¬Ê±Ê§°Ü
 475   3      
 476   3                              RF_ClearFIFO();
 477   3                              RF_ClearStatus();
 478   3                              break;
 479   3                      default:                // rf ´¦ÓÚ¿ÕÏÐ×´Ì¬²Å·¢ËÍÊý¾Ý
 480   3      
 481   3                              RF_TxData(sendBuf, sizeof(sendBuf));
 482   3      
 483   3                              break;
 484   3                      }
 485   2      
 486   2              } else {
 487   2                      if (ucRF_DumpRxData(rcvBuf, sizeof(rcvBuf))) {
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/12/2017 01:20:21 PAGE 9   

 488   3      
 489   3                              app_2d4_Rcv(rcvBuf);
 490   3      
 491   3                      }
 492   2              }
 493   1      }
 494          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1986    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     41      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
