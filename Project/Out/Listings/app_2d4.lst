C51 COMPILER V9.56.0.0   APP_2D4                                                           08/29/2017 22:42:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_2D4
OBJECT MODULE PLACED IN .\Out\Objects\app_2d4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_2d4.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_2d4.lst) OBJEC
                    -T(.\Out\Objects\app_2d4.obj)

line level    source

   1          /*
   2           * app_2d4.c
   3           *
   4           *  Created on: 2017年8月16日
   5           *      Author: fly
   6           */
   7          #include "app.h"
   8          #include <string.h>
   9          #include <ctype.h>
  10          
  11          static uint8_t sendRcv_flag = 0; //0 rcv， 1 send
  12          static uint8_t rcvBuf[PAYLOAD_WIDTH] = { 0 };
  13          static uint8_t sendBuf[PAYLOAD_WIDTH] = { 0 };
  14          
  15          void app_2d4_init(void) {
  16   1      
  17   1              sendRcv_flag = 0;
  18   1              memset(rcvBuf, 0, sizeof(rcvBuf));
  19   1              memset(sendBuf, 0, sizeof(sendBuf));
  20   1      
  21   1              RF_Init();
  22   1              RF_RxMode();
  23   1      //      RF_Carrier(1);
  24   1      
  25   1      }
  26          
  27          void app_2d4_send(uint8_t *d, uint8_t len) {
  28   1              if (len > sizeof(sendBuf)) {
  29   2                      return;
  30   2              }
  31   1      
  32   1              RF_TxMode();
  33   1              sendRcv_flag = 1;
  34   1      
  35   1              if (sendBuf != d) {
  36   2                      memset(sendBuf, 0, sizeof(sendBuf));
  37   2                      memcpy(sendBuf, d, len);
  38   2              }
  39   1      }
  40          idata char sss[32] = { 0 };
  41          static void app_2d4_Rcv(uint8_t *buf) {
  42   1              uint8_t i = 0;
  43   1              uint8_t index = 0;
  44   1              uint8_t check = 0;
  45   1      #if 1
  46   1              sprintf(sss, "rcv %02X %02X %02X %02X %02X %02X\r\n", (uint16_t) buf[0],
  47   1                              (uint16_t) buf[1], (uint16_t) buf[2], (uint16_t) buf[3],
  48   1                              (uint16_t) buf[4], (uint16_t) buf[5]);
  49   1              printf(sss);
  50   1      #endif
  51   1              if (buf[0] != LCD2LAMP_HEADER) {
  52   2                      return;
  53   2              }
C51 COMPILER V9.56.0.0   APP_2D4                                                           08/29/2017 22:42:33 PAGE 2   

  54   1              if (buf[1] > sizeof(rcvBuf)) {
  55   2                      return;
  56   2              }
  57   1              for (i = 0; i < (buf[1] + 1); i++) {
  58   2                      check += buf[i + 1];
  59   2              }
  60   1              if (check != buf[buf[1] + 2]) {
  61   2                      return;
  62   2              }
  63   1      
  64   1              memset(sendBuf, 0, sizeof(sendBuf));
  65   1              index = 0;
  66   1              switch (buf[2]) {
  67   2              case POWER_SHORT_CMD:
  68   2      
  69   2                      printf("POWER_SHORT_CMD\r\n");
  70   2                      break;
  71   2              case POWER_LONG_CMD:
  72   2      
  73   2                      break;
  74   2              case ACC_CMD:
  75   2      
  76   2                      if (buf[3] == 1) {
  77   3                              Relay_on();
  78   3                      } else if (buf[3] == 2) {
  79   3                              Relay_off();
  80   3                      } else if (buf[3] == 3) {
  81   3                              Relay_toggle();
  82   3                      }
  83   2      
  84   2                      sendBuf[index++] = LAMP2LCD_HEADER;
  85   2                      sendBuf[index++] = 0x02;
  86   2                      sendBuf[index++] = buf[2];
  87   2                      if (Relay_IsOn()) {
  88   3                              sendBuf[index++] = 0x01;
  89   3                      } else {
  90   3                              sendBuf[index++] = 0x02;
  91   3                      }
  92   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
  93   3                              sendBuf[index] += sendBuf[i + 1];
  94   3                      }
  95   2      
  96   2                      printf("ACC_CMD\r\n");
  97   2                      break;
  98   2              case UP_CMD:
  99   2      
 100   2                      printf("UP_CMD\r\n");
 101   2                      break;
 102   2              case DOWN_CMD:
 103   2      
 104   2                      printf("DOWN_CMD\r\n");
 105   2                      break;
 106   2              case DOME_CMD:
 107   2                      break;
 108   2              case VOL_ADD_CMD:
 109   2      
 110   2                      printf("VOL_ADD_CMD\r\n");
 111   2                      break;
 112   2              case VOL_MINUS_CMD:
 113   2      
 114   2                      printf("VOL_MINUS_CMD\r\n");
 115   2                      break;
C51 COMPILER V9.56.0.0   APP_2D4                                                           08/29/2017 22:42:33 PAGE 3   

 116   2              case PLAY_CMD:
 117   2      
 118   2                      printf("PLAY_CMD\r\n");
 119   2                      break;
 120   2              case MODE_CMD:
 121   2      
 122   2                      printf("MODE_CMD\r\n");
 123   2                      break;
 124   2              }
 125   1              if (index) {
 126   2                      index++;
 127   2                      app_2d4_send(sendBuf, index);
 128   2              }
 129   1      
 130   1      }
 131          
 132          void app_2d4_pro(void) {
 133   1      
 134   1              if (sendRcv_flag) {
 135   2      
 136   2                      switch (ucRF_GetStatus()) {
 137   3                      case TX_DS_FLAG:                // 普通型发送完成 或 增强型发送成功
 138   3      
 139   3                              RF_ClearFIFO();
 140   3                              RF_ClearStatus();
 141   3      
 142   3                              sendRcv_flag = 0;
 143   3                              RF_RxMode();
 144   3      
 145   3                              break;
 146   3                      case RX_DR_FLAG:                //发送成功且收到payload
 147   3      
 148   3                              RF_ClearFIFO();
 149   3                              RF_ClearStatus();
 150   3                              break;
 151   3                      case MAX_RT_FLAG:               // 增强型发送超时失败
 152   3      
 153   3                              RF_ClearFIFO();
 154   3                              RF_ClearStatus();
 155   3                              break;
 156   3                      default:                // rf 处于空闲状态才发送数据
 157   3      
 158   3                              RF_TxData(sendBuf, sizeof(sendBuf));
 159   3                              sendRcv_flag = 0;
 160   3                              break;
 161   3                      }
 162   2      
 163   2              } else {
 164   2                      if (ucRF_DumpRxData(rcvBuf, sizeof(rcvBuf))) {
 165   3      
 166   3                              app_2d4_Rcv(rcvBuf);
 167   3      
 168   3                      }
 169   2              }
 170   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    951    ----
   CONSTANT SIZE    =    136    ----
   XDATA SIZE       =     33      10
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   APP_2D4                                                           08/29/2017 22:42:33 PAGE 4   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =     32    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
