C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_2D4
OBJECT MODULE PLACED IN .\Out\Objects\app_2d4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_2d4.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_2d4.lst) OBJEC
                    -T(.\Out\Objects\app_2d4.obj)

line level    source

   1          /*
   2           * app_2d4.c
   3           *
   4           *  Created on: 2017Äê8ÔÂ16ÈÕ
   5           *      Author: fly
   6           */
   7          #include "app.h"
   8          #include <string.h>
   9          #include <ctype.h>
  10          
  11          #include "app_2d4.h"
  12          
  13          static uint8_t sendRcv_flag = 0; //0 rcv£¬ 1 send
  14          static uint8_t rcvBuf[PAYLOAD_WIDTH] = { 0 };
  15          uint8_t sendBuf[PAYLOAD_WIDTH] = { 0 };
  16          
  17          static uint8_t test_vol = 0;
  18          static uint8_t test_yinxiang_status = 0;
  19          
  20          void app_2d4_init(void) {
  21   1      
  22   1              sendRcv_flag = 0;
  23   1              memset(rcvBuf, 0, sizeof(rcvBuf));
  24   1              memset(sendBuf, 0, sizeof(sendBuf));
  25   1      
  26   1              RF_Init();
  27   1      #if 1
  28   1      
  29   1              RF_RxMode();
  30   1      #else
                      RF_TxMode();
                      sendRcv_flag = 1;
              #endif
  34   1      
  35   1      //      RF_Carrier(1);
  36   1      
  37   1      }
  38          
  39          void app_2d4_send(uint8_t *d, uint8_t len) {
  40   1      //      if (len > PAYLOAD_WIDTH) {
  41   1      //              return;
  42   1      //      }
  43   1              uint8_t i = 0;
  44   1              for (i = 0; i < 120; i++) {
  45   2                      nop
  46   2                      nop
  47   2                      nop
  48   2                      nop
  49   2              }
  50   1              RF_TxMode();
  51   1              sendRcv_flag = 1;
  52   1      
  53   1              for (i = 0; i < 120; i++) {
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 2   

  54   2                      nop
  55   2                      nop
  56   2                      nop
  57   2                      nop
  58   2              }
  59   1      
  60   1              if (sendBuf != d) {
  61   2                      memset(sendBuf, 0, PAYLOAD_WIDTH);
  62   2                      memcpy(sendBuf, d, len);
  63   2              }
  64   1      
  65   1      }
  66          #if DEBUG
              idata char sss[32] = {0};
              #endif
  69          static void app_2d4_Rcv(uint8_t *buf) {
  70   1              uint8_t tmp = 0;
  71   1              uint8_t i = 0;
  72   1              uint8_t index = 0;
  73   1              uint8_t check = 0;
  74   1      #if DEBUG
                      sprintf(sss, "rcv %02X %02X %02X %02X %02X %02X\r\n", (uint16_t) buf[0],
                                      (uint16_t) buf[1], (uint16_t) buf[2], (uint16_t) buf[3],
                                      (uint16_t) buf[4], (uint16_t) buf[5]);
                      printf(sss);
              #endif
  80   1              if (buf[0] != LCD2LAMP_HEADER) {
  81   2                      return;
  82   2              }
  83   1              if (buf[1] > sizeof(rcvBuf)) {
  84   2                      return;
  85   2              }
  86   1              for (i = 0; i < (buf[1] + 1); i++) {
  87   2                      check += buf[i + 1];
  88   2              }
  89   1              if (check != buf[buf[1] + 2]) {
  90   2                      return;
  91   2              }
  92   1      
  93   1              memset(sendBuf, 0, PAYLOAD_WIDTH);
  94   1              index = 0;
  95   1              switch (buf[2]) {
  96   2              case POWER_SHORT_CMD:
  97   2                      tmp = 0x03;
  98   2                      app_uart_send(POWER_SHORT_UART_CMD, &tmp, 1);
  99   2      
 100   2      #if DEBUG
                              printf("POWER_SHORT_CMD\r\n");
              #endif
 103   2                      break;
 104   2              case POWER_LONG_CMD:
 105   2      #if 0
                              if (buf[3] == 1) {
                                      test_yinxiang_status = 1;
                              } else if (buf[3] == 2) {
                                      test_yinxiang_status = 0;
                              } else if (buf[3] == 3) {
                                      if (test_yinxiang_status) {
                                              test_yinxiang_status = 0;
                                      } else {
                                              test_yinxiang_status = 1;
                                      }
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 3   

                              }
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_yinxiang_status;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 125   2      
 126   2      #endif
 127   2      
 128   2      #if DEBUG
                              printf("POWER_LONG_CMD\r\n");
              #endif
 131   2                      break;
 132   2              case ACC_CMD:
 133   2      
 134   2                      if (buf[3] == 1) {
 135   3                              Relay_on();
 136   3                      } else if (buf[3] == 2) {
 137   3                              Relay_off();
 138   3                      } else if (buf[3] == 3) {
 139   3                              Relay_toggle();
 140   3                      }
 141   2      
 142   2                      sendBuf[index++] = LAMP2LCD_HEADER;
 143   2                      sendBuf[index++] = 0x02;
 144   2                      sendBuf[index++] = buf[2];
 145   2                      if (Relay_IsOn()) {
 146   3                              sendBuf[index++] = 0x01;
 147   3                      } else {
 148   3                              sendBuf[index++] = 0x02;
 149   3                      }
 150   2                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 151   3                              sendBuf[index] += sendBuf[i + 1];
 152   3                      }
 153   2      
 154   2      #if DEBUG
                              printf("ACC_CMD\r\n");
              #endif
 157   2                      break;
 158   2              case UP_CMD:
 159   2      
 160   2                      app_uart_send(UP_UART_CMD, 0, 0);
 161   2      
 162   2      
 163   2      #if DEBUG
                              printf("UP_CMD\r\n");
              #endif
 166   2                      break;
 167   2              case DOWN_CMD:
 168   2      
 169   2                      app_uart_send(DOWN_UART_CMD, 0, 0);
 170   2      
 171   2      #if DEBUG
                              printf("DOWN_CMD\r\n");
              #endif
 174   2                      break;
 175   2              case DOME_CMD:
 176   2      
 177   2                      tmp = 0x03;
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 4   

 178   2                      app_uart_send(DOME_UART_CMD, &tmp, 1);
 179   2      
 180   2                      break;
 181   2              case VOL_ADD_CMD:
 182   2      #if 0
                              if (buf[3] == 1) {
                                      test_vol++;
                                      if (test_vol > 30) {
                                              test_vol = 30;
                                      }
                              } else if (buf[3] == 2) {
                                      if (test_vol) {
                                              test_vol--;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_vol;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              
              #else
 203   2      
 204   2                      app_uart_send(VOL_ADD_UART_CMD, 0, 0);
 205   2      
 206   2      #endif
 207   2      
 208   2      #if DEBUG
                              printf("VOL_ADD_CMD\r\n");
              #endif
 211   2                      break;
 212   2              case VOL_MINUS_CMD:
 213   2      #if 0
                              if (buf[3] == 1) {
                                      test_vol++;
                                      if (test_vol > 30) {
                                              test_vol = 30;
                                      }
                              } else if (buf[3] == 2) {
                                      if (test_vol) {
                                              test_vol--;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = test_vol;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 233   2                      app_uart_send(VOL_MINUS_UART_CMD, 0, 0);
 234   2      #endif
 235   2      
 236   2      #if DEBUG
                              printf("VOL_MINUS_CMD\r\n");
              #endif
 239   2                      break;
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 5   

 240   2              case PLAY_CMD:
 241   2      #if 0
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x03;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = (uint8_t) g_tWork.mode;
              
                              if (buf[3] == 3) {
              
                                      switch (g_tWork.mode) {
                                              case 'B':
              
                                              if (g_tWork.status.bits.BT) {
                                                      g_tWork.status.bits.BT = 0;
                                              } else {
                                                      g_tWork.status.bits.BT = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.BT;
                                              break;
                                              case 'F':
                                              if (g_tWork.status.bits.FM) {
                                                      g_tWork.status.bits.FM = 0;
                                              } else {
                                                      g_tWork.status.bits.FM = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.FM;
                                              break;
                                              case 'A':
                                              if (g_tWork.status.bits.AUX) {
                                                      g_tWork.status.bits.AUX = 0;
                                              } else {
                                                      g_tWork.status.bits.AUX = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.AUX;
                                              break;
                                              case 'U':
                                              if (g_tWork.status.bits.USB) {
                                                      g_tWork.status.bits.USB = 0;
                                              } else {
                                                      g_tWork.status.bits.USB = 1;
                                              }
                                              sendBuf[index++] = g_tWork.status.bits.USB;
                                              break;
                                      }
              
                              }
              
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 291   2                      app_uart_send(PLAY_UART_CMD, 0, 0);
 292   2      #endif
 293   2      #if DEBUG
                              printf("PLAY_CMD\r\n");
              #endif
 296   2                      break;
 297   2              case MODE_CMD:
 298   2      #if 0
                              if (buf[3] == 1) {
                                      switch (g_tWork.mode) {
                                              case 'B':
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 6   

                                              g_tWork.mode = 'F';
                                              break;
                                              case 'F':
                                              g_tWork.mode = 'A';
                                              break;
                                              case 'A':
                                              g_tWork.mode = 'U';
                                              break;
                                              case 'U':
                                              g_tWork.mode = 'B';
                                              break;
                                      }
                              }
              
                              sendBuf[index++] = LAMP2LCD_HEADER;
                              sendBuf[index++] = 0x02;
                              sendBuf[index++] = buf[2];
                              sendBuf[index++] = g_tWork.mode;
                              for (i = 0; i < (sendBuf[1] + 1); i++) {
                                      sendBuf[index] += sendBuf[i + 1];
                              }
              #else
 324   2                      app_uart_send(MODE_UART_CMD, 0, 0);
 325   2      #endif
 326   2      
 327   2      #if DEBUG
                              printf("MODE_CMD\r\n");
              #endif
 330   2                      break;
 331   2              }
 332   1              if (index) {
 333   2                      index++;
 334   2      #if 0
                              nop
                              nop
                              nop
                              nop
              
                              RF_TxMode();
                              sendRcv_flag = 1;
                              for (i = 0; i < 120; i++) {
                                      nop
                                      nop
                                      nop
                                      nop
                              }
              #else
 349   2                      app_2d4_send(sendBuf, index);
 350   2      #endif
 351   2              }
 352   1      
 353   1      }
 354          
 355          void app_2d4_pro(void) {
 356   1      
 357   1              if (sendRcv_flag) {
 358   2      
 359   2                      switch (ucRF_GetStatus()) {
 360   3                      case TX_DS_FLAG:                // ÆÕÍ¨ÐÍ·¢ËÍÍê³É »ò ÔöÇ¿ÐÍ·¢ËÍ³É¹¦
 361   3      
 362   3                              RF_ClearFIFO();
 363   3                              RF_ClearStatus();
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 7   

 364   3      
 365   3      //                      printf("Send OK\r\n");
 366   3      
 367   3                              sendRcv_flag = 0;
 368   3                              RF_RxMode();
 369   3      
 370   3      //                      Relay_toggle();
 371   3      
 372   3                              break;
 373   3                      case RX_DR_FLAG:                //·¢ËÍ³É¹¦ÇÒÊÕµ½payload
 374   3      
 375   3                              RF_ClearFIFO();
 376   3                              RF_ClearStatus();
 377   3                              break;
 378   3                      case MAX_RT_FLAG:               // ÔöÇ¿ÐÍ·¢ËÍ³¬Ê±Ê§°Ü
 379   3      
 380   3                              RF_ClearFIFO();
 381   3                              RF_ClearStatus();
 382   3                              break;
 383   3                      default:                // rf ´¦ÓÚ¿ÕÏÐ×´Ì¬²Å·¢ËÍÊý¾Ý
 384   3      
 385   3                              RF_TxData(sendBuf, sizeof(sendBuf));
 386   3      
 387   3                              break;
 388   3                      }
 389   2      
 390   2              } else {
 391   2                      if (ucRF_DumpRxData(rcvBuf, sizeof(rcvBuf))) {
 392   3      
 393   3                              app_2d4_Rcv(rcvBuf);
 394   3      
 395   3                      }
 396   2              }
 397   1      }
 398          
 399          void app_2d4_1S_pro(void) {
 400   1      
 401   1              switch (g_tWork.mode) {
 402   2              case 'B':
 403   2      
 404   2                      break;
 405   2              case 'F':
 406   2      
 407   2                      break;
 408   2              case 'A':
 409   2      
 410   2                      break;
 411   2              case 'U':
 412   2      
 413   2                      break;
 414   2              }
 415   1      
 416   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    911    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     35      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   APP_2D4                                                           09/09/2017 20:49:17 PAGE 8   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
