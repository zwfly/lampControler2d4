C51 COMPILER V9.56.0.0   BSP_LIGHT                                                         08/18/2017 23:11:05 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE BSP_LIGHT
OBJECT MODULE PLACED IN .\Out\Objects\bsp_light.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Bsp\src\bsp_light.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\i
                    -nc;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\bsp_light.lst) O
                    -BJECT(.\Out\Objects\bsp_light.obj)

line level    source

   1          /*
   2           * bsp_light.c
   3           *
   4           *  Created on: 2017Äê8ÔÂ18ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "bsp.h"
   9          
  10          void Light_InitHard(void) {
  11   1      
  12   1              clr_P0M1_3;
  13   1              set_P0M2_3;
  14   1      
  15   1              clr_P0M1_4;
  16   1              set_P0M2_4;
  17   1      
  18   1              clr_P1M1_2;
  19   1              P1M2 |= SET_BIT2;
  20   1      //      set_P1M2_2;
  21   1      
  22   1              PWM0_P12_OUTPUT_ENABLE;
  23   1              PWM3_P04_OUTPUT_ENABLE
  24   1              ;
  25   1              PWM5_P03_OUTPUT_ENABLE;
  26   1      
  27   1              PWM_IMDEPENDENT_MODE;
  28   1              PWM_CLOCK_DIV_128;
  29   1              PWMPH = 0x03;
  30   1              PWMPL = 0xE8;
  31   1              /**********************************************************************
  32   1               PWM frequency = Fpwm/((PWMPH,PWMPL) + 1) <Fpwm = Fsys/PWM_CLOCK_DIV>
  33   1               = (16MHz/8)/(0x7CF + 1)
  34   1               = 1KHz (1ms)
  35   1               ***********************************************************************/
  36   1      
  37   1              PWM0H = 0x01;
  38   1              PWM0L = 0xF4;
  39   1      
  40   1      //      set_SFRPAGE
  41   1      //      ;                                               //PWM4 and PWM5 duty seting is in SFP page 1
  42   1              PWM3H = 0x01;
  43   1              PWM3L = 0xD4;
  44   1              PWM5H = 0x01;
  45   1              PWM5L = 0xA4;
  46   1      //      clr_SFRPAGE
  47   1      //      ;
  48   1              // PWM output inversly enable
  49   1      //      PWM2_OUTPUT_INVERSE;
  50   1      
  51   1              //-------- PWM start run--------------
  52   1              set_LOAD;
  53   1              set_PWMRUN;
C51 COMPILER V9.56.0.0   BSP_LIGHT                                                         08/18/2017 23:11:05 PAGE 2   

  54   1      
  55   1      }
  56          void Light_Red_set(uint8_t duty) {
  57   1              uint16_t d = 0;
  58   1              d = duty * 10;
  59   1      
  60   1              PWM5H = (d >> 8) & 0xFF;
  61   1              PWM5L = d & 0xFF;
  62   1      }
  63          void Light_Green_set(uint8_t duty) {
  64   1              uint16_t d = 0;
  65   1              d = duty * 10;
  66   1      
  67   1              PWM3H = (d >> 8) & 0xFF;
  68   1              PWM3L = d & 0xFF;
  69   1      }
  70          void Light_Blue_set(uint8_t duty) {
  71   1              uint16_t d = 0;
  72   1              d = duty * 10;
  73   1      
  74   1              PWM0H = (d >> 8) & 0xFF;
  75   1              PWM0L = d & 0xFF;
  76   1      }
  77          
  78          void Light_RGB_set(uint8_t r, uint8_t g, uint8_t b) {
  79   1              Light_Red_set(r);
  80   1              Light_Green_set(g);
  81   1              Light_Blue_set(b);
  82   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    159    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
