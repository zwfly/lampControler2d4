C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2017 01:05:06 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\main.c LARGE OPTIMIZE(8,SIZE) BROWSE INCDIR(..\Common\inc;..\
                    -App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\main.lst) OBJECT(.\Out
                    -\Objects\main.obj)

line level    source

   1          #include "app.h"
   2          
   3          static uint8_t dome_cnt = 0;
   4          
   5          void main(void) {
   6   1              uint8_t ucKeyCode;
   7   1      
   8   1      #if  0
              
              //      set_HIRCEN
              ////    //step1: enable HIRC clock source run
              //      while ((CKSWT & SET_BIT5) == 0)
              //              ;                               //step2: check ready
              
                      clr_HIRCEN
              
                      set_EXTEN1
                      set_EXTEN0
              
                      clr_OSC1
              //step3: switching system clock source if needed
                      set_OSC0
              
                      while ((CKEN & SET_BIT0) == 1)
                      ;//step4: check system clock switching OK or NG
              
              #endif
  28   1              /****************/
  29   1              bsp_Init();
  30   1      
  31   1              /****************/
  32   1              app_eeprom_Init();
  33   1              app_2d4_init();
  34   1              app_work_Init();
  35   1              app_uart_Init();
  36   1              app_dome_Init();
  37   1              /****************/
  38   1      //      Show_FW_Version_Number_To_PC();
  39   1              while (1) {
  40   2      
  41   2      //              Relay_toggle();
  42   2                      if (Task_time.flag_1ms) {
  43   3                              Task_time.flag_1ms = 0;
  44   3                              //////////////////
  45   3      
  46   3                              dome_cnt++;
  47   3                              if (dome_running_param.speed >= 50) {
  48   4                                      if (dome_cnt > (10 + (dome_running_param.speed - 50) / 3)) {
  49   5                                              dome_cnt = 0;
  50   5                                              app_dome_interrupter();
  51   5                                      }
  52   4                              } else {
  53   4                                      if (dome_cnt > (10 - (50 - dome_running_param.speed) / 6)) {
C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2017 01:05:06 PAGE 2   

  54   5                                              dome_cnt = 0;
  55   5                                              app_dome_interrupter();
  56   5                                      }
  57   4                              }
  58   3      
  59   3                      }
  60   2      
  61   2                      if (Task_time.flag_10ms) {
  62   3                              Task_time.flag_10ms = 0;
  63   3                              //////////////////
  64   3                              bsp_KeyScan();
  65   3      //                      app_dome_interrupter();
  66   3                      }
  67   2                      if (Task_time.flag_100ms) {
  68   3                              Task_time.flag_100ms = 0;
  69   3                              //////////////////
  70   3                              app_uart_pro();
  71   3                              app_2d4_pro();
  72   3      //                      app_work_100ms_pro();
  73   3      //                      Repeat_Pro();
  74   3      
  75   3                      }
  76   2                      if (Task_time.flag_500ms) {
  77   3                              Task_time.flag_500ms = 0;
  78   3                              //////////////////
  79   3      
  80   3                      }
  81   2                      if (Task_time.flag_1s) {
  82   3                              Task_time.flag_1s = 0;
  83   3                              //////////////////
  84   3      #if DEBUG
                                      printf("I am alive\r\n");
              #endif
  87   3      
  88   3      //                      app_work_1s_pro();
  89   3      
  90   3                      }
  91   2      #if 1
  92   2      
  93   2                      ucKeyCode = bsp_GetKey();
  94   2                      if (ucKeyCode != KEY_NONE) {
  95   3                              static uint8_t press_long_lock = 0;
  96   3                              switch (ucKeyCode) {
  97   4                              case KEY_UP_K1:   //
  98   4                                      if (press_long_lock == 0) {
  99   5      //                                      g_tWork.status.bits.DEMO = 0;
 100   5      //                                      app_dome_start_current();
 101   5                                              if (g_tWork.status.bits.blinkEnable) {
 102   6                                                      uint8_t index = 0, i = 0;
 103   6                                                      app_dome_next();
 104   6                                                      sendBuf[index++] = LAMP2LCD_HEADER;
 105   6                                                      sendBuf[index++] = 9;
 106   6                                                      sendBuf[index++] = KEY_DOWN_CMD;
 107   6                                                      app_dome_get_current_Name(sendBuf + index, 8);
 108   6                                                      index += 8;
 109   6                                                      for (i = 0; i < (sendBuf[1] + 1); i++) {
 110   7                                                              sendBuf[index] += sendBuf[i + 1];
 111   7                                                      }
 112   6                                                      index++;
 113   6                                                      app_2d4_send(sendBuf, index);
 114   6                                              }
 115   5      
C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2017 01:05:06 PAGE 3   

 116   5                                      }
 117   4                                      press_long_lock = 0;
 118   4                                      break;
 119   4                              case KEY_DOWN_K1:
 120   4                                      break;
 121   4                              case KEY_LONG_K1:
 122   4                                      press_long_lock = 1;
 123   4                                      if (g_tWork.status.bits.blinkEnable) {
 124   5                                              g_tWork.status.bits.blinkEnable = 0;
 125   5      //                                      g_tWork.status.bits.DEMO = 0;
 126   5                                              app_dome_stop_current();
 127   5                                      } else {
 128   5                                              g_tWork.status.bits.blinkEnable = 1;
 129   5                                              g_tWork.status.bits.DEMO = 0;
 130   5      //                                      app_dome_start(0, 0);
 131   5                                              app_dome_start_current();
 132   5                                      }
 133   4                                      break;
 134   4                              case KEY_UP_K2:   //
 135   4                                      break;
 136   4                              case KEY_DOWN_K2:
 137   4      
 138   4                                      Relay_toggle();
 139   4                                      break;
 140   4                              case KEY_LONG_K2:
 141   4                                      break;
 142   4                              }
 143   3                      }
 144   2      #endif
 145   2              }
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    444    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
