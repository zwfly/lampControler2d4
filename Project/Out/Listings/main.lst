C51 COMPILER V9.52.0.0   MAIN                                                              12/06/2017 17:03:19 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Out\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\main.c LARGE OPTIMIZE(8,SIZE) BROWSE INCDIR(..\Common\inc;..\
                    -App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\main.lst) TABS(2) OBJE
                    -CT(.\Out\Objects\main.obj)

line level    source

   1          #include "app.h"
   2          
   3          static uint8_t dome_cnt = 0;
   4          
   5          void main(void) {
   6   1        uint8_t ucKeyCode;
   7   1      
   8   1      #if  0
              
              //  set_HIRCEN
              ////  //step1: enable HIRC clock source run
              //  while ((CKSWT & SET_BIT5) == 0)
              //    ;       //step2: check ready
              
                clr_HIRCEN
              
                set_EXTEN1
                set_EXTEN0
              
                clr_OSC1
              //step3: switching system clock source if needed
                set_OSC0
              
                while ((CKEN & SET_BIT0) == 1)
                ;//step4: check system clock switching OK or NG
              
              #endif
  28   1        /****************/
  29   1        bsp_Init();
  30   1      
  31   1        /****************/
  32   1        app_eeprom_Init();
  33   1        app_2d4_init();
  34   1        app_work_Init();
  35   1        app_uart_Init();
  36   1        app_dome_Init();
  37   1        /****************/
  38   1      //  Show_FW_Version_Number_To_PC();
  39   1        while (1) {
  40   2      
  41   2      //    Relay_toggle();
  42   2          if (Task_time.flag_1ms) {
  43   3            Task_time.flag_1ms = 0;
  44   3            //////////////////
  45   3      
  46   3            dome_cnt++;
  47   3            if (dome_running_param.speed >= 50) {
  48   4              if (dome_cnt > (10 + (dome_running_param.speed - 50) / 3)) {
  49   5                dome_cnt = 0;
  50   5                app_dome_interrupter();
  51   5              }
  52   4            } else {
  53   4              if (dome_cnt > (10 - (50 - dome_running_param.speed) / 6)) {
C51 COMPILER V9.52.0.0   MAIN                                                              12/06/2017 17:03:19 PAGE 2   

  54   5                dome_cnt = 0;
  55   5                app_dome_interrupter();
  56   5              }
  57   4            }
  58   3      
  59   3          }
  60   2      
  61   2          if (Task_time.flag_10ms) {
  62   3            Task_time.flag_10ms = 0;
  63   3            //////////////////
  64   3            bsp_KeyScan();
  65   3      //      app_dome_interrupter();
  66   3      
  67   3            app_uart_pro();
  68   3            app_2d4_pro();
  69   3      
  70   3          }
  71   2          if (Task_time.flag_100ms) {
  72   3            Task_time.flag_100ms = 0;
  73   3            //////////////////
  74   3      
  75   3      //      app_work_100ms_pro();
  76   3      //      Repeat_Pro();
  77   3      
  78   3          }
  79   2          if (Task_time.flag_500ms) {
  80   3            Task_time.flag_500ms = 0;
  81   3            //////////////////
  82   3      
  83   3          }
  84   2          if (Task_time.flag_1s) {
  85   3            Task_time.flag_1s = 0;
  86   3            //////////////////
  87   3      #if DEBUG
                    printf("I am alive\r\n");
              #endif
  90   3      
  91   3            app_work_1s_pro();
  92   3      
  93   3          }
  94   2      #if 1
  95   2      
  96   2          ucKeyCode = bsp_GetKey();
  97   2          if (ucKeyCode != KEY_NONE) {
  98   3            static uint8_t press_long_lock = 0;
  99   3            switch (ucKeyCode) {
 100   4            case KEY_UP_K1:   //
 101   4              if (press_long_lock == 0) {
 102   5      //          g_tWork.status.bits.DEMO = 0;
 103   5      //          app_dome_start_current();
 104   5                if (g_tWork.status.bits.blinkEnable) {
 105   6                  uint8_t index = 0, i = 0;
 106   6                  app_dome_next();
 107   6                  sendBuf[index++] = LAMP2LCD_HEADER;
 108   6                  sendBuf[index++] = 9;
 109   6                  sendBuf[index++] = KEY_DOWN_CMD;
 110   6                  app_dome_get_current_Name(sendBuf + index, 8);
 111   6                  index += 8;
 112   6                  for (i = 0; i < (sendBuf[1] + 1); i++) {
 113   7                    sendBuf[index] += sendBuf[i + 1];
 114   7                  }
 115   6                  index++;
C51 COMPILER V9.52.0.0   MAIN                                                              12/06/2017 17:03:19 PAGE 3   

 116   6                  app_2d4_send(sendBuf, index);
 117   6                }
 118   5      
 119   5              }
 120   4              press_long_lock = 0;
 121   4              break;
 122   4            case KEY_DOWN_K1:
 123   4              break;
 124   4            case KEY_LONG_K1:
 125   4              press_long_lock = 1;
 126   4              if (g_tWork.status.bits.blinkEnable) {
 127   5                g_tWork.status.bits.blinkEnable = 0;
 128   5      //          g_tWork.status.bits.DEMO = 0;
 129   5                app_dome_stop_current();
 130   5              } else {
 131   5                g_tWork.status.bits.blinkEnable = 1;
 132   5                g_tWork.status.bits.DEMO = 0;
 133   5      //          app_dome_start(0, 0);
 134   5                app_dome_start_current();
 135   5              }
 136   4              break;
 137   4            case KEY_UP_K2:   //
 138   4              break;
 139   4            case KEY_DOWN_K2:
 140   4      
 141   4              Relay_toggle();
 142   4              break;
 143   4            case KEY_LONG_K2:
 144   4              break;
 145   4            }
 146   3          }
 147   2      #endif
 148   2        }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    447    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
