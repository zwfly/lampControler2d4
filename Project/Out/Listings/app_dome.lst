C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE APP_DOME
OBJECT MODULE PLACED IN .\Out\Objects\app_dome.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_dome.c LARGE OPTIMIZE(8,SIZE) BROWSE INCDIR(..\Common\inc
                    -;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_dome.lst) TABS
                    -(2) OBJECT(.\Out\Objects\app_dome.obj)

line level    source

   1          /*
   2           * app_dome.c
   3           *
   4           *  Created on: 2017年9月8日
   5           *      Author: fly
   6           */
   7          
   8          #include "app.h"
   9          #include <stdlib.h>
  10          
  11          static SUBDOME_T subDome;
  12          static DOME_HEADER_T domeHeader;
  13          static SUBDOME_ASSIST_T subDome_Assist;
  14          static DOME_PRO_T domePro;
  15          uint8_t blink_number = 0; //闪法的总数量
  16          
  17          DOME_DEFAULT_T dome_blink;
  18          
  19          DOME_RUNNING_T dome_running_param;
  20          ///////////////////
  21          #define COLOR_BLINK_NUMBER  10
  22          static uint8_t color_blink_index = 0;
  23          code const uint8_t color_blink_buffer[COLOR_BLINK_NUMBER][3] = {
  24              { 255, 255, 255 },  //white
  25              { 0, 255, 0 },   //green
  26              { 0, 0, 255 },   //blue
  27              { 255, 0, 0 },   //red
  28              { 0, 255, 255 }, //blue:green = 1:1
  29              { 255, 0, 255 }, //red:blue = 1:1
  30              { 255, 255, 0 }, //red:green = 1:1
  31              { 0, 255, 128 }, //blue:green = 1:2
  32              { 0, 128, 255 }, //blue:green = 2:1
  33              { 255, 128, 0 } //red:green = 2:1
  34          };
  35          
  36          //DOME_DEFAULT_T dome_blink_buffers[DEFAULT_DOME_NUM];
  37          #if 0
              code const DOME_DEFAULT_T dome_default[DEFAULT_DOME_NUM] = {  //
                { //start big dome0
                  {  //start header0
                    "    DOME", 0, 0x01//header0 body
                  },  //end header0
                  {  //start dome0
                    { 0x05, {255, 255, 255}, {0, 0, 0}, 1, 200,
                      100, 0}, //subdome0
                    { 0x14, {255, 0, 0}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome1
                    { 0x24, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome2
                    { 0x34, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0},   //subdome3
                    { 0x44, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome4
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 2   

                    { 0x54, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 255, 0}, {0, 0, 0}, 1, 200, 100,
                      0}    //subdome7
                  }  //end dome0
                },  // end big dome0
                { //start big dome1
                  {  //start header0
                    "     LSU", 0, 0x02}, //end header0
                  {  //start dome0
                    { 0x03, {160, 32, 240}, {255, 165, 0}, 1, 200, 100,
                      0}, //subdome0
                    { 0x13, {255, 165, 0}, {160, 32, 240}, 1,
                      200, 100, 0},  //subdome1
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome2
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0},   //subdome3
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome4
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome5
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0},  //subdome6
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome1
                { //start big dome2
                  {  //start header0
                    "    XMAS", 0, 0x03}, //end header0
                  {  //start dome0
                    { 0x03, {255, 0, 0}, {0, 255, 0}, 1, 200, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {255, 255, 255}, 1,
                      200, 100, 0},  //subdome1
                    { 0x23, {255, 255, 255}, {255, 0, 0}, 1,
                      200, 100, 0},  //subdome2
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},   //subdome3
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome2
                { //start big dome3
                  {  //start header0
                    "   MARDI", 0, 0x04}, //end header0
                  {  //start dome0
                    { 0x03, {255, 0, 0}, {0, 255, 0}, 1, 100, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 3   

                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome3
                { //start big dome4
                  {  //start header0
                    "   FADE1", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x04, {255, 0, 0}, {0, 0, 0}, 1, 200, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "   FADE2", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x04, {0, 255, 0}, {0, 0, 0}, 1, 200, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                }, // end big dome4
                { //start big dome4
                  {  //start header0
                    "   FADE3", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x04, {0, 0, 255}, {0, 0, 0}, 1, 200, 100, 0}, //subdome0
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 4   

                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "   FADE4", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x04, {160, 32, 240}, {0, 0, 0}, 1, 200, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "   FADE5", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x04, {255, 165, 0}, {0, 0, 0}, 1, 200, 100, 0}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 5   

                  {  //start header0
                    "  SHARP1", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x05, {255, 0, 0}, {0, 0, 0}, 1, 100, 100, 100}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "  SHARP2", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x05, {0, 255, 0}, {0, 0, 0}, 1, 100, 100, 100}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                }, // end big dome4
                { //start big dome4
                  {  //start header0
                    "  SHARP3", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x05, {0, 0, 255}, {0, 0, 0}, 1, 100, 100, 100}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 6   

              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "  SHARP4", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x05, {160, 32, 240}, {0, 0, 0}, 1, 100,
                      100, 100}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 0},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                },  // end big dome4
                { //start big dome4
                  {  //start header0
                    "  SHARP5", 0, 0x01}, //end header0
                  {  //start dome0
                    { 0x05, {255, 165, 0}, {0, 0, 0}, 1, 100,
                      100, 100}, //subdome0
                    { 0x13, {0, 255, 0}, {160, 32, 240}, 1, 100,
                      100, 100},  //subdome1
                    { 0x23, {160, 32, 240}, {255, 255, 0}, 1,
                      100, 100, 100},  //subdome2
                    { 0x33, {255, 255, 0}, {255, 0, 0}, 1, 100,
                      100, 0},   //subdome3
                    { 0x44, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome4
                    { 0x54, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome5
                    { 0x64, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0},  //subdome6
                    { 0x74, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                }, // end big dome4
                { //start big dome4
                  {  //start header0
                    " GRADIEN", 0, 0x07}, //end header0
                  {  //start dome0
                    { 0x03, {255, 0, 0}, {255, 0x7F, 0}, 1, 100,
                      100, 0}, //subdome0
                    { 0x13, {255, 0x7F, 0}, {255, 255, 0}, 1,
                      100, 100, 0},  //subdome1
                    { 0x23, {255, 255, 0}, {0, 255, 0}, 1, 100,
                      100, 0},  //subdome2
                    { 0x33, {0, 255, 0}, {0, 255, 255}, 1, 100,
                      100, 0},   //subdome3
                    { 0x43, {0, 255, 255}, {0, 0, 255}, 1, 100,
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 7   

                      100, 0},  //subdome4
                    { 0x53, {0, 0, 255}, {0x8B, 0, 255}, 1, 100,
                      100, 0},  //subdome5
                    { 0x63, {0x8B, 0, 255}, {255, 0, 0}, 1, 100,
                      100, 0},  //subdome6
                    { 0x73, {0, 0, 255}, {0, 0, 0}, 4, 200, 100,
                      0}    //subdome7
              
                  }  //end dome0
                }  // end big dome4
              };
              #endif
 376          //////////////////
 377          
 378          void app_dome_Init(void) {
 379   1        uint8_t i = 0;
 380   1        uint8_t u8_tmp = 0;
 381   1      //  g_tWork.status.bits.blinkEnable = 1;
 382   1      
 383   1        u8_tmp = (0x4800 - DOME_START_ADDR) / sizeof(DOME_DEFAULT_T);
 384   1        blink_number = 0;
 385   1        for (i = 0; i < u8_tmp; i++) {
 386   2          if (0xFF != app_eeprom_read_byte(
 387   2          DOME_START_ADDR + i * sizeof(DOME_DEFAULT_T))) {
 388   3            blink_number++;
 389   3          } else {
 390   3            break;
 391   3          }
 392   2        }
 393   1        color_blink_index = COLOR_BLINK_NUMBER - 1;
 394   1        memset((uint8_t *) &subDome_Assist, 0, sizeof(subDome_Assist));
 395   1      
 396   1        memset((uint8_t *) &domePro, 0, sizeof(domePro));
 397   1        memset((uint8_t *) &dome_blink, 0, sizeof(dome_blink));
 398   1        memset((uint8_t *) &dome_running_param, 0, sizeof(dome_running_param));
 399   1      
 400   1        dome_running_param.bright = 100;
 401   1        dome_running_param.speed = 50;
 402   1      //  app_dome_start(0, 0);
 403   1        app_dome_stop_current();
 404   1      
 405   1      }
 406          void app_color_blink_previous(void) {
 407   1        if (color_blink_index) {
 408   2          color_blink_index--;
 409   2        } else {
 410   2          color_blink_index = COLOR_BLINK_NUMBER - 1;
 411   2        }
 412   1        app_dome_rgb(color_blink_buffer[color_blink_index][0],
 413   1            color_blink_buffer[color_blink_index][1],
 414   1            color_blink_buffer[color_blink_index][2]);
 415   1      }
 416          void app_color_blink_next(void) {
 417   1        color_blink_index++;
 418   1        if (color_blink_index >= COLOR_BLINK_NUMBER) {
 419   2          color_blink_index = 0;
 420   2        }
 421   1        app_dome_rgb(color_blink_buffer[color_blink_index][0],
 422   1            color_blink_buffer[color_blink_index][1],
 423   1            color_blink_buffer[color_blink_index][2]);
 424   1      }
 425          
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 8   

 426          void app_dome_previous(void) {
 427   1        if (domePro.currentDomeIndex) {
 428   2          domePro.currentDomeIndex--;
 429   2        } else {
 430   2          domePro.currentDomeIndex = blink_number ? blink_number - 1 : 0;
 431   2        }
 432   1        app_dome_start(domePro.currentDomeIndex);
 433   1      
 434   1      }
 435          void app_dome_next(void) {
 436   1        domePro.currentDomeIndex++;
 437   1        if (domePro.currentDomeIndex >= blink_number) {
 438   2          domePro.currentDomeIndex = 0;
 439   2        }
 440   1        app_dome_start(domePro.currentDomeIndex);
 441   1      
 442   1      }
 443          
 444          void app_dome_get_current_Name(char *name, uint8_t len) {
 445   1        if (len > sizeof(dome_blink.header.name)) {
 446   2          name = 0;
 447   2          return;
 448   2        }
 449   1        memcpy((uint8_t *) name, (uint8_t *) dome_blink.header.name, len);
 450   1      }
 451          void app_dome_start_current(void) {
 452   1        color_blink_index = COLOR_BLINK_NUMBER - 1;
 453   1      
 454   1        g_tWork.status.bits.blinkEnable = 1;
 455   1        app_dome_start(domePro.currentDomeIndex);
 456   1      }
 457          void app_dome_stop_current(void) {
 458   1        g_tWork.status.bits.blinkEnable = 0;
 459   1      
 460   1        subDome.repeate = 0;
 461   1        subDome.offtime = 0;
 462   1        Light_RGB_set(0, 0, 0);
 463   1      }
 464          void app_dome_single_cycle(uint8_t subIndex) {
 465   1        if ((dome_blink.header.repeat_number & 0x0F) == (subIndex + 1)) {
 466   2          subIndex = 0;
 467   2          memcpy((uint8_t*) &subDome, (uint8_t*) &dome_blink.subdome[subIndex],
 468   2              sizeof(subDome));
 469   2        } else {
 470   2          memcpy((uint8_t*) &subDome,
 471   2              (uint8_t*) &dome_blink.subdome[subIndex + 1], sizeof(subDome));
 472   2        }
 473   1        memcpy((uint8_t*) &domeHeader, (uint8_t*) &dome_blink.header,
 474   1            sizeof(domeHeader));
 475   1      }
 476          
 477          /*
 478           dir 方向，0：不变，1：向前next，2：后退prev
 479           */
 480          void app_dome_start(uint8_t domeIndex) {
 481   1        subDome_Assist.switch_flag = 0;
 482   1        subDome_Assist.msCnt = 0;
 483   1        subDome_Assist.stopTime = 0;
 484   1      
 485   1        if (blink_number == 0) {
 486   2          Light_RGB_set(0, 0, 0);
 487   2          return;
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 9   

 488   2        }
 489   1      
 490   1      //  app_dome_single_cycle(domeIndex);
 491   1        if (domeIndex > (blink_number - 1)) {
 492   2          domePro.currentDomeIndex = blink_number - 1;
 493   2          domeIndex = blink_number - 1;
 494   2        } else {
 495   2          domePro.currentDomeIndex = domeIndex;
 496   2        }
 497   1      
 498   1      #if 1
 499   1        app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
 500   1      
 501   1      #else
                if (dir == 0) {
                  app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
                  if (*((uint8_t *) &dome_blink) == 0xFF) {
                    Light_RGB_set(0, 0, 0);
                  }
                } else if (dir == 1) {
                  uint8_t i = 0;
                  for (i = 0; i < blink_number; i++) {
                    app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
                    if (*((uint8_t *) &dome_blink) == 0xFF) {
                      if (domeIndex == 0) {
                        Light_RGB_set(0, 0, 0);
                        break;
                      }
                      domeIndex++;
                      if (domeIndex >= blink_number) {
                        domeIndex = 0;
              //          break;
                      }
                    } else {
                      break;
                    }
                  }
                } else if (dir == 2) {
                  uint8_t i = 0;
                  for (i = 0; i < DEFAULT_DOME_NUM; i++) {
                    app_eeprom_get_dome_with_index(&dome_blink, domeIndex);
                    if (*((uint8_t *) &dome_blink) == 0xFF) {
                      if (domeIndex) {
                        domeIndex--;
                      } else {
                        Light_RGB_set(0, 0, 0);
                        break;
                      }
                    } else {
                      break;
                    }
                  }
                }
              
              #endif
 543   1      
 544   1      //  domePro.currentDomeIndex = domeIndex;
 545   1      //  if (dome_blink.header.index == 0) {
 546   1      //    app_eeprom_get_dome_with_index(&dome_blink, 0);
 547   1      //    app_dome_stop_current();
 548   1      //  }
 549   1      
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 10  

 550   1        memcpy((uint8_t*) &subDome, (uint8_t*) &dome_blink.subdome[0],
 551   1            sizeof(subDome));
 552   1      
 553   1        memcpy((uint8_t*) &domeHeader, (uint8_t*) &dome_blink.header,
 554   1            sizeof(domeHeader));
 555   1      
 556   1      }
 557          static uint8_t cyc = 0;
 558          static void app_dome_subDome_pro(uint8_t subIndex) {
 559   1      
 560   1        subDome_Assist.switch_flag = 0;
 561   1        subDome_Assist.msCnt = 0;
 562   1        subDome_Assist.stopTime = 50;
 563   1      
 564   1        if (g_tWork.status.bits.DEMO) {
 565   2          cyc++;
 566   2          if (cyc <= 4) {
 567   3            app_dome_single_cycle(subIndex);
 568   3          } else {
 569   3            cyc = 0;
 570   3            app_dome_next();
 571   3          }
 572   2        } else {
 573   2          cyc = 0;
 574   2          app_dome_single_cycle(subIndex);
 575   2        }
 576   1      }
 577          
 578          void app_dome_rgb(uint8_t r, uint8_t g, uint8_t b) {
 579   1        app_dome_stop_current();
 580   1        dome_running_param.color.R = r << 8;
 581   1        dome_running_param.color.G = g << 8;
 582   1        dome_running_param.color.B = b << 8;
 583   1      #if 1
 584   1        Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
 585   1            dome_running_param.color.B);
 586   1      #else
                Light_RGB_set(0xFFFF, 0xFFFF, 0xFFFF);
              #endif
 589   1      }
 590          
 591          static uint32_t tmp = 0;
 592          //static uint8_t tmp_color = 0;
 593          
 594          void app_dome_interrupter(void) {
 595   1      
 596   1      #if 1
 597   1      
 598   1        if (g_tWork.status.bits.blinkEnable == 0) {
 599   2          return;
 600   2        }
 601   1      
 602   1        if (subDome_Assist.stopTime) {
 603   2          subDome_Assist.stopTime--;
 604   2          return;
 605   2        }
 606   1      
 607   1        if ((subDome.repeate == 0) && (subDome.offtime == 0)) {
 608   2          return;
 609   2        }
 610   1      
 611   1        switch (subDome.mode & 0x0F) {
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 11  

 612   2        case 0x03:  //shadow
 613   2        {
 614   3          subDome_Assist.msCnt++;
 615   3      
 616   3          if (subDome.color1.R < subDome.color2.R) {
 617   4            tmp = subDome.color1.R * 256
 618   4                + subDome_Assist.msCnt * 256
 619   4                    * abs(subDome.color2.R - subDome.color1.R)
 620   4                    / subDome.speed;
 621   4            tmp = subDome.bright * tmp / 100;
 622   4          } else {
 623   4            tmp = subDome.color1.R * 256
 624   4                - subDome_Assist.msCnt * 256
 625   4                    * abs(subDome.color2.R - subDome.color1.R)
 626   4                    / subDome.speed;
 627   4            tmp = subDome.bright * tmp / 100;
 628   4          }
 629   3          dome_running_param.color.R = tmp & 0xFFFF;
 630   3          //////
 631   3          if (subDome.color1.G < subDome.color2.G) {
 632   4            tmp = subDome.color1.G * 256
 633   4                + subDome_Assist.msCnt * 256
 634   4                    * abs(subDome.color2.G - subDome.color1.G)
 635   4                    / subDome.speed;
 636   4            tmp = subDome.bright * tmp / 100;
 637   4      //      Light_Green_set(tmp);
 638   4          } else {
 639   4            tmp = subDome.color1.G * 256
 640   4                - subDome_Assist.msCnt * 256
 641   4                    * abs(subDome.color2.G - subDome.color1.G)
 642   4                    / subDome.speed;
 643   4            tmp = subDome.bright * tmp / 100;
 644   4      //      Light_Green_set(tmp);
 645   4          }
 646   3          dome_running_param.color.G = tmp & 0xFFFF;
 647   3          //////
 648   3          if (subDome.color1.B < subDome.color2.B) {
 649   4            tmp = subDome.color1.B * 256
 650   4                + subDome_Assist.msCnt * 256
 651   4                    * abs(subDome.color2.B - subDome.color1.B)
 652   4                    / subDome.speed;
 653   4            tmp = subDome.bright * tmp / 100;
 654   4      //      Light_Blue_set(tmp);
 655   4          } else {
 656   4            tmp = subDome.color1.B * 256
 657   4                - subDome_Assist.msCnt * 256
 658   4                    * abs(subDome.color2.B - subDome.color1.B)
 659   4                    / subDome.speed;
 660   4            tmp = subDome.bright * tmp / 100;
 661   4      //      Light_Blue_set(tmp);
 662   4          }
 663   3          dome_running_param.color.B = tmp & 0xFFFF;
 664   3          Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
 665   3              dome_running_param.color.B);
 666   3      
 667   3          if (subDome_Assist.msCnt >= subDome.speed) {
 668   4            subDome_Assist.msCnt = 0;
 669   4      #if 0
                    tmp_color = subDome.color2.R;
                    subDome.color2.R = subDome.color1.R;
                    subDome.color1.R = tmp_color;
              
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 12  

                    tmp_color = subDome.color2.G;
                    subDome.color2.G = subDome.color1.G;
                    subDome.color1.G = tmp_color;
              
                    tmp_color = subDome.color2.B;
                    subDome.color2.B = subDome.color1.B;
                    subDome.color1.B = tmp_color;
              
                    if (subDome_Assist.switch_flag == 0) {
                      subDome_Assist.switch_flag = 1;
              
                    } else {
                      subDome_Assist.switch_flag = 0;
              
                      if (subDome.repeate) {
                        subDome.repeate--;
                      }
                    }
              #else
 693   4      
 694   4            if (subDome.repeate) {
 695   5              subDome.repeate--;
 696   5            }
 697   4      
 698   4      #endif
 699   4          }
 700   3          if (subDome.repeate == 0) {
 701   4      //      Light_RGB_set(0, 0, 0);
 702   4      
 703   4      //      if (subDome.offtime) {
 704   4      //        subDome.offtime--;
 705   4      //      }
 706   4      //      if (subDome.offtime == 0) {
 707   4            app_dome_subDome_pro(subDome.mode >> 4);
 708   4      //      }
 709   4      
 710   4          }
 711   3        }
 712   2          break;
 713   2        case 0x04:  //breath
 714   2        {
 715   3          if (subDome_Assist.switch_flag == 0) {
 716   4            subDome_Assist.msCnt++;
 717   4          } else {
 718   4            if (subDome_Assist.msCnt) {
 719   5              subDome_Assist.msCnt--;
 720   5            }
 721   4          }
 722   3      
 723   3          tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.R / subDome.speed;
 724   3          tmp = tmp * subDome.bright / 100;
 725   3          dome_running_param.color.R = tmp & 0xFFFF;
 726   3      
 727   3          tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.G / subDome.speed;
 728   3          tmp = tmp * subDome.bright / 100;
 729   3          dome_running_param.color.G = tmp & 0xFFFF;
 730   3      
 731   3          tmp = subDome_Assist.msCnt * 0xFF * subDome.color1.B / subDome.speed;
 732   3          tmp = tmp * subDome.bright / 100;
 733   3          dome_running_param.color.B = tmp & 0xFFFF;
 734   3          Light_RGB_set(dome_running_param.color.R, dome_running_param.color.G,
 735   3              dome_running_param.color.B);
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 13  

 736   3      
 737   3          if ((subDome_Assist.msCnt >= subDome.speed)
 738   3              || (subDome_Assist.msCnt == 0)) {
 739   4            if (subDome_Assist.switch_flag == 0) {
 740   5              subDome_Assist.switch_flag = 1;
 741   5            } else {
 742   5              subDome_Assist.switch_flag = 0;
 743   5              if (subDome.repeate) {
 744   6                subDome.repeate--;
 745   6              }
 746   5            }
 747   4          }
 748   3          if (subDome.repeate == 0) {
 749   4      //      Light_RGB_set(0, 0, 0);
 750   4      //      if (subDome.offtime) {
 751   4      //        subDome.offtime--;
 752   4      //      }
 753   4      //      if (subDome.offtime == 0) {
 754   4            app_dome_subDome_pro(subDome.mode >> 4);
 755   4      //      }
 756   4          }
 757   3        }
 758   2          break;
 759   2        case 0x05:  //blink flash
 760   2        {
 761   3          uint32_t tt = 0xFF;
 762   3          if (subDome_Assist.msCnt == 0) {
 763   4            tmp = tt * subDome.color1.R * subDome.bright / 100;
 764   4            dome_running_param.color.R = tmp & 0xFFFF;
 765   4      
 766   4            tmp = tt * subDome.color1.G * subDome.bright / 100;
 767   4            dome_running_param.color.G = tmp & 0xFFFF;
 768   4      
 769   4            tmp = tt * subDome.color1.B * subDome.bright / 100;
 770   4            dome_running_param.color.B = tmp & 0xFFFF;
 771   4            Light_RGB_set(dome_running_param.color.R,
 772   4                dome_running_param.color.G, dome_running_param.color.B);
 773   4          }
 774   3          tmp = subDome.speed;
 775   3          if (subDome_Assist.msCnt == tmp) {
 776   4            tmp = tt * subDome.color2.R * subDome.bright / 100;
 777   4            dome_running_param.color.R = tmp & 0xFFFF;
 778   4      
 779   4            tmp = tt * subDome.color2.G * subDome.bright / 100;
 780   4            dome_running_param.color.G = tmp & 0xFFFF;
 781   4      
 782   4            tmp = tt * subDome.color2.B * subDome.bright / 100;
 783   4            dome_running_param.color.B = tmp & 0xFFFF;
 784   4            Light_RGB_set(dome_running_param.color.R,
 785   4                dome_running_param.color.G, dome_running_param.color.B);
 786   4          }
 787   3          subDome_Assist.msCnt++;
 788   3          tmp = 0;
 789   3          tmp = tmp + subDome.speed + subDome.offtime;
 790   3          if (subDome_Assist.msCnt >= tmp) {
 791   4            subDome_Assist.msCnt = 0;
 792   4            if (subDome.repeate) {
 793   5              subDome.repeate--;
 794   5            }
 795   4          }
 796   3          if (subDome.repeate == 0) {
 797   4      //      Light_RGB_set(0, 0, 0);
C51 COMPILER V9.52.0.0   APP_DOME                                                          12/06/2017 17:03:20 PAGE 14  

 798   4      //      if (subDome.offtime) {
 799   4      //        subDome.offtime--;
 800   4      //      }
 801   4      //      if (subDome.offtime == 0) {
 802   4            app_dome_subDome_pro(subDome.mode >> 4);
 803   4      //      }
 804   4          }
 805   3        }
 806   2          break;
 807   2        default:
 808   2      
 809   2          break;
 810   2        }
 811   1      
 812   1      #endif
 813   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2917    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =    159      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
