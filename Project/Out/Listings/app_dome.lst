C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE APP_DOME
OBJECT MODULE PLACED IN .\Out\Objects\app_dome.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\App\src\app_dome.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Common\in
                    -c;..\App\inc;..\Bsp\inc;..\Startup;..\Bsp) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Out\Listings\app_dome.lst) OBJ
                    -ECT(.\Out\Objects\app_dome.obj)

line level    source

   1          /*
   2           * app_dome.c
   3           *
   4           *  Created on: 2017Äê9ÔÂ8ÈÕ
   5           *      Author: fly
   6           */
   7          
   8          #include "app.h"
   9          #include <stdlib.h>
  10          
  11          static SUBDOME_T subDome;
  12          static DOME_HEADER_T domeHeader;
  13          static SUBDOME_ASSIST_T subDome_Assist;
  14          
  15          code const DOME_DEFAULT_T dome_default[DEFAULT_DOME_NUM] = {  //
  16                          { //start big dome0
  17                                          {  //start header0
  18                                                          "HOME", 3  //header0 body
  19                                                          },//end header0
  20                                                          {  //start dome0
  21          
  22                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100, 0 }, //subdome0
  23                                                                          { 0x04, { 255, 0, 0 }, { 0, 0, 0 }, 1, 200, 100,
  24                                                                                          0 },  //subdome1
  25                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  26                                                                                          0 },  //subdome2
  27                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  28                                                                                          0 },   //subdome3
  29                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  30                                                                                          0 },  //subdome4
  31                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  32                                                                                          0 },  //subdome5
  33                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  34                                                                                          0 },  //subdome6
  35                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  36                                                                                          0 }    //subdome7
  37                                                          }  //end dome0
  38                                          },  // end big dome0
  39                                          { //start big dome1
  40                                          {  //start header0
  41                                                          "FOO", 3 }, //end header0
  42                                                          {  //start dome0
  43                                                          { 0x04, { 255, 0, 0 }, { 0, 0, 0 }, 1, 200, 100, 0 }, //subdome0
  44                                                                          { 0x04, { 0, 255, 0 }, { 0, 0, 0 }, 1, 200, 100,
  45                                                                                          0 },  //subdome1
  46                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  47                                                                                          0 },  //subdome2
  48                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  49                                                                                          0 },   //subdome3
  50                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  51                                                                                          0 },  //subdome4
  52                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  53                                                                                          0 },  //subdome5
C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 2   

  54                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  55                                                                                          0 },  //subdome6
  56                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 1, 200, 100,
  57                                                                                          0 }    //subdome7
  58          
  59                                                          }  //end dome0
  60                                          },  // end big dome1
  61                                          { //start big dome0
  62                                          {  //start header0
  63                                                          "BAR", 1 }, //end header0
  64                                                          {  //start dome0
  65                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100, 0 }, //subdome0
  66                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  67                                                                                          0 },  //subdome1
  68                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  69                                                                                          0 },  //subdome2
  70                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  71                                                                                          0 },   //subdome3
  72                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  73                                                                                          0 },  //subdome4
  74                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  75                                                                                          0 },  //subdome5
  76                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  77                                                                                          0 },  //subdome6
  78                                                                          { 0x04, { 0, 0, 255 }, { 0, 0, 0 }, 4, 200, 100,
  79                                                                                          0 }    //subdome7
  80          
  81                                                          }  //end dome0
  82                                          }  // end big dome0
  83                          };
  84          
  85          void app_dome_start(uint8_t index);
  86          void app_dome_Init(void) {
  87   1      
  88   1              memset((uint8_t *) &subDome_Assist, 0, sizeof(subDome_Assist));
  89   1      
  90   1              strcpy(domeHeader.name, "HOME");
  91   1              domeHeader.number = 4;
  92   1      
  93   1              subDome.mode = 0x05;
  94   1      
  95   1              subDome.color1.R = 200;
  96   1              subDome.color2.R = 0;
  97   1      
  98   1              subDome.color1.G = 180;
  99   1              subDome.color2.G = 0;
 100   1      
 101   1              subDome.color1.B = 120;
 102   1              subDome.color2.B = 0;
 103   1      
 104   1              subDome.repeate = 30;
 105   1              subDome.bright = 90;
 106   1      
 107   1              subDome.speed = 3;
 108   1              subDome.offtime = 60;
 109   1      
 110   1              app_dome_start(0);
 111   1      
 112   1      }
 113          
 114          void app_dome_500ms_pro(void) {
 115   1      
C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 3   

 116   1      }
 117          uint16_t app_dome_get_status(void) {
 118   1      
 119   1              return 0;
 120   1      }
 121          void app_dome_stop_current(void) {
 122   1      
 123   1      }
 124          void app_dome_start(uint8_t index) {
 125   1              subDome_Assist.switch_flag = 0;
 126   1              subDome_Assist.msCnt = 0;
 127   1              subDome_Assist.stopTime = 50;
 128   1      
 129   1              memcpy((uint8_t*) &domeHeader, (uint8_t*) &dome_default[1].header,
 130   1                              sizeof(domeHeader));
 131   1      
 132   1              memcpy((uint8_t*) &subDome, (uint8_t*) &dome_default[1].subdome[0],
 133   1                              sizeof(subDome));
 134   1      
 135   1      //      app_eeprom_get_dome_with_index(&subDome, index);
 136   1      
 137   1      }
*** WARNING C280 IN LINE 124 OF ..\App\src\app_dome.c: 'index': unreferenced local variable
 138          static uint32_t tmp = 0;
 139          static uint8_t tmp_color = 0;
 140          
 141          void app_dome_interrupter(void) {
 142   1      
 143   1      #if 1
 144   1      
 145   1              if (subDome_Assist.stopTime) {
 146   2                      subDome_Assist.stopTime--;
 147   2                      return;
 148   2              }
 149   1      
 150   1              if ((subDome.repeate == 0) && (subDome.offtime == 0)) {
 151   2                      return;
 152   2              }
 153   1      
 154   1              switch (subDome.mode & 0x0F) {
 155   2              case 0x03:  //shadow
 156   2              {
 157   3                      subDome_Assist.msCnt++;
 158   3                      if (subDome.color1.R < subDome.color2.R) {
 159   4                              tmp = subDome.color1.R * 256
 160   4                                              + subDome_Assist.msCnt * 256
 161   4                                                              * abs(subDome.color2.R - subDome.color1.R)
 162   4                                                              / subDome.speed;
 163   4                              tmp = subDome.bright * tmp / 100;
 164   4                              Light_Red_set(tmp & 0xFFFF);
 165   4                      } else {
 166   4                              tmp = subDome.color1.R * 256
 167   4                                              - subDome_Assist.msCnt * 256
 168   4                                                              * abs(subDome.color2.R - subDome.color1.R)
 169   4                                                              / subDome.speed;
 170   4                              tmp = subDome.bright * tmp / 100;
 171   4                              Light_Red_set(tmp);
 172   4                      }
 173   3                      //////
 174   3                      if (subDome.color1.G < subDome.color2.G) {
 175   4                              tmp = subDome.color1.G * 256
 176   4                                              + subDome_Assist.msCnt * 256
C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 4   

 177   4                                                              * abs(subDome.color2.G - subDome.color1.G)
 178   4                                                              / subDome.speed;
 179   4                              tmp = subDome.bright * tmp / 100;
 180   4                              Light_Green_set(tmp);
 181   4                      } else {
 182   4                              tmp = subDome.color1.G * 256
 183   4                                              - subDome_Assist.msCnt * 256
 184   4                                                              * abs(subDome.color2.G - subDome.color1.G)
 185   4                                                              / subDome.speed;
 186   4                              tmp = subDome.bright * tmp / 100;
 187   4                              Light_Green_set(tmp);
 188   4                      }
 189   3                      //////
 190   3                      if (subDome.color1.B < subDome.color2.B) {
 191   4                              tmp = subDome.color1.B * 256
 192   4                                              + subDome_Assist.msCnt * 256
 193   4                                                              * abs(subDome.color2.B - subDome.color1.B)
 194   4                                                              / subDome.speed;
 195   4                              tmp = subDome.bright * tmp / 100;
 196   4                              Light_Blue_set(tmp);
 197   4                      } else {
 198   4                              tmp = subDome.color1.B * 256
 199   4                                              - subDome_Assist.msCnt * 256
 200   4                                                              * abs(subDome.color2.B - subDome.color1.B)
 201   4                                                              / subDome.speed;
 202   4                              tmp = subDome.bright * tmp / 100;
 203   4                              Light_Blue_set(tmp);
 204   4                      }
 205   3      
 206   3                      if (subDome_Assist.msCnt >= subDome.speed) {
 207   4                              subDome_Assist.msCnt = 0;
 208   4      
 209   4                              tmp_color = subDome.color2.R;
 210   4                              subDome.color2.R = subDome.color1.R;
 211   4                              subDome.color1.R = tmp_color;
 212   4      
 213   4                              tmp_color = subDome.color2.G;
 214   4                              subDome.color2.G = subDome.color1.G;
 215   4                              subDome.color1.G = tmp_color;
 216   4      
 217   4                              tmp_color = subDome.color2.B;
 218   4                              subDome.color2.B = subDome.color1.B;
 219   4                              subDome.color1.B = tmp_color;
 220   4      
 221   4                              if (subDome_Assist.switch_flag == 0) {
 222   5                                      subDome_Assist.switch_flag = 1;
 223   5      
 224   5                              } else {
 225   5                                      subDome_Assist.switch_flag = 0;
 226   5      
 227   5                                      if (subDome.repeate) {
 228   6                                              subDome.repeate--;
 229   6                                      }
 230   5                              }
 231   4                      }
 232   3                      if (subDome.repeate == 0) {
 233   4                              Light_RGB_set(0, 0, 0);
 234   4      
 235   4                              if (subDome.offtime) {
 236   5                                      subDome.offtime--;
 237   5                              }
 238   4                              if (subDome.offtime == 0) {
C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 5   

 239   5                                      app_dome_start(subDome.mode);
 240   5                              }
 241   4      
 242   4                      }
 243   3              }
 244   2                      break;
 245   2              case 0x04:  //breath
 246   2              {
 247   3                      if (subDome_Assist.switch_flag == 0) {
 248   4                              subDome_Assist.msCnt++;
 249   4                      } else {
 250   4                              if (subDome_Assist.msCnt) {
 251   5                                      subDome_Assist.msCnt--;
 252   5                              }
 253   4                      }
 254   3      
 255   3                      tmp = 0xFF * subDome_Assist.msCnt * subDome.color1.R / subDome.speed;
 256   3                      tmp = tmp * subDome.bright / 100;
 257   3                      Light_Red_set(tmp & 0xFFFF);
 258   3      
 259   3                      tmp = 0xFF * subDome_Assist.msCnt * subDome.color1.G / subDome.speed;
 260   3                      tmp = tmp * subDome.bright / 100;
 261   3                      Light_Green_set(tmp & 0xFFFF);
 262   3      
 263   3                      tmp = 0xFF * subDome_Assist.msCnt * subDome.color1.B / subDome.speed;
 264   3                      tmp = tmp * subDome.bright / 100;
 265   3                      Light_Blue_set(tmp & 0xFFFF);
 266   3      
 267   3                      if ((subDome_Assist.msCnt >= subDome.speed)
 268   3                                      || (subDome_Assist.msCnt == 0)) {
 269   4                              if (subDome_Assist.switch_flag == 0) {
 270   5                                      subDome_Assist.switch_flag = 1;
 271   5                              } else {
 272   5                                      subDome_Assist.switch_flag = 0;
 273   5                                      if (subDome.repeate) {
 274   6                                              subDome.repeate--;
 275   6                                      }
 276   5                              }
 277   4                      }
 278   3                      if (subDome.repeate == 0) {
 279   4                              Light_RGB_set(0, 0, 0);
 280   4                              if (subDome.offtime) {
 281   5                                      subDome.offtime--;
 282   5                              }
 283   4                              if (subDome.offtime == 0) {
 284   5                                      app_dome_start(subDome.mode);
 285   5                              }
 286   4                      }
 287   3              }
 288   2                      break;
 289   2              case 0x05:  //blink
 290   2              {
 291   3                      uint32_t tt = 0xFF;
 292   3                      if (subDome_Assist.msCnt == 0) {
 293   4                              tmp = tt * subDome.color1.R * subDome.bright / 100;
 294   4                              Light_Red_set(tmp & 0xFFFF);
 295   4      
 296   4                              tmp = tt * subDome.color1.G * subDome.bright / 100;
 297   4                              Light_Green_set(tmp & 0xFFFF);
 298   4      
 299   4                              tmp = tt * subDome.color1.B * subDome.bright / 100;
 300   4                              Light_Blue_set(tmp & 0xFFFF);
C51 COMPILER V9.56.0.0   APP_DOME                                                          09/10/2017 22:41:19 PAGE 6   

 301   4                      }
 302   3                      if (subDome_Assist.msCnt == (uint32_t) subDome.speed) {
 303   4                              tmp = tt * subDome.color2.R * subDome.bright / 100;
 304   4                              Light_Red_set(tmp & 0xFFFF);
 305   4      
 306   4                              tmp = tt * subDome.color2.G * subDome.bright / 100;
 307   4                              Light_Green_set(tmp & 0xFFFF);
 308   4      
 309   4                              tmp = tt * subDome.color2.B * subDome.bright / 100;
 310   4                              Light_Blue_set(tmp & 0xFFFF);
 311   4                      }
 312   3                      subDome_Assist.msCnt++;
 313   3                      if (subDome_Assist.msCnt >= (subDome.speed + subDome.offtime)) {
 314   4                              subDome_Assist.msCnt = 0;
 315   4      
 316   4                              if (subDome.repeate) {
 317   5                                      subDome.repeate--;
 318   5                              }
 319   4      
 320   4                      }
 321   3                      if (subDome.repeate == 0) {
 322   4                              Light_RGB_set(0, 0, 0);
 323   4                              if (subDome.offtime) {
 324   5                                      subDome.offtime--;
 325   5                              }
 326   4                              if (subDome.offtime == 0) {
 327   5                                      app_dome_start(subDome.mode);
 328   5                              }
 329   4                      }
 330   3              }
 331   2                      break;
 332   2              default:
 333   2      
 334   2                      break;
 335   2              }
 336   1      
 337   1      #endif
 338   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2727    ----
   CONSTANT SIZE    =    344    ----
   XDATA SIZE       =     33       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
